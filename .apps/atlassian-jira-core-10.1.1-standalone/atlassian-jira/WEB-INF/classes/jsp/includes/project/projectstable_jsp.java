/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat9
 * Generated at: 2024-10-09 09:01:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package jsp.includes.project;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class projectstable_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fjira_005fformatuser_0026_005fuserKey_005ftype_005fid_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fjira_005fformatuser_0026_005fuserKey_005ftype_005fid_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fjira_005fformatuser_0026_005fuserKey_005ftype_005fid_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
 final String avatarSize = "small"; 
      out.write("\n<div class=\"p-list\">\n    <table class=\"aui\">\n        <thead>\n            <tr>\n                <th></th>\n                <th class=\"project-list-name\"><ww:text name=\"'common.concepts.project'\" /></th>\n                <th class=\"project-list-key\"><ww:text name=\"'common.concepts.key'\" /></th>\n                <th class=\"project-list-lead\"><ww:text name=\"'common.concepts.projectlead'\" /></th>\n                <th class=\"project-list-url\"><ww:text name=\"'common.concepts.url'\" /></th>\n            </tr>\n        </thead>\n        <tbody class=\"projects-list\">\n        <ww:iterator>\n            <tr>\n                <td class=\"cell-type-icon\" data-cell-type=\"avatar\">\n                    <ui:soy moduleKey=\"'com.atlassian.auiplugin:soy'\" template=\"'aui.avatar.avatar'\">\n                        <ui:param name=\"'isProject'\" value=\"true\" />\n                        <ui:param name=\"'size'\">");
      out.print( avatarSize );
      out.write("</ui:param>\n                        <ui:param name=\"'accessibilityText'\"><ww:text name=\"'common.concepts.project.avatar.title'\"><ww:param name=\"'value0'\"><ww:property value=\"./name\" /></ww:param></ww:text></ui:param>\n                        <ww:if test=\"/hasDefaultAvatar(.) == true\">\n                            <ui:param name=\"'avatarImageUrl'\">\n                                <ww:url value=\"'/secure/projectavatar'\" atltoken=\"false\" >\n                                    <ww:param name=\"'size'\">");
      out.print( avatarSize );
      out.write("</ww:param>\n                                </ww:url>\n                                <ui:param name=\"'extraClasses'\" value=\"'jira-system-avatar'\"/>\n                            </ui:param>\n                        </ww:if>\n                        <ww:else>\n                            <ww:if test=\"./avatar != null\">\n                                <ui:param name=\"'avatarImageUrl'\">\n                                    <ww:url value=\"'/secure/projectavatar'\" atltoken=\"false\">\n                                        <ww:param name=\"'pid'\" value=\"./id\"/>\n                                        <ww:param name=\"'size'\">");
      out.print( avatarSize );
      out.write("</ww:param>\n                                    </ww:url>\n                                </ui:param>\n                                <ww:if test=\"./avatar/systemAvatar == true\">\n                                    <ui:param name=\"'extraClasses'\" value=\"'jira-system-avatar'\"/>\n                                </ww:if>\n                            </ww:if>\n                        </ww:else>\n                    </ui:soy>\n                </td>\n                <td data-cell-type=\"name\">\n                    <a href=\"");
      out.print( request.getContextPath() );
      out.write("/browse/<ww:property value=\"./key\" />\"><ww:property value=\"./name\" /></a>\n                </td>\n                <td>\n                    <ww:property value=\"./key\" />\n                </td>\n                <td class=\"cell-type-user\">\n                    <ww:if test=\"./lead != null\">\n                        ");
      if (_jspx_meth_jira_005fformatuser_005f0(_jspx_page_context))
        return;
      out.write("\n                    </ww:if>\n                    <ww:else>\n                        <i><ww:text name=\"'browse.projects.no.lead'\" /></i>\n                    </ww:else>\n                </td>\n                <td class=\"cell-type-url\">\n                    <ww:if test=\"./url != null && ./url != ''\">\n                        <a href=\"<ww:property value=\"./url\" />\"><ww:property value=\"./url\" /></a>\n                    </ww:if>\n                    <ww:else>\n                        <i><ww:text name=\"'browse.projects.no.url'\" /></i>\n                    </ww:else>\n                </td>\n            </tr>\n        </ww:iterator>\n        </tbody>\n    </table>\n</div>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_jira_005fformatuser_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  jira:formatuser
    com.atlassian.jira.web.tags.FormatUserTag _jspx_th_jira_005fformatuser_005f0 = (com.atlassian.jira.web.tags.FormatUserTag) _005fjspx_005ftagPool_005fjira_005fformatuser_0026_005fuserKey_005ftype_005fid_005fnobody.get(com.atlassian.jira.web.tags.FormatUserTag.class);
    boolean _jspx_th_jira_005fformatuser_005f0_reused = false;
    try {
      _jspx_th_jira_005fformatuser_005f0.setPageContext(_jspx_page_context);
      _jspx_th_jira_005fformatuser_005f0.setParent(null);
      // /includes/project/projectstable.jsp(53,24) name = userKey type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_jira_005fformatuser_005f0.setUserKey("./projectLead/key");
      // /includes/project/projectstable.jsp(53,24) name = type type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_jira_005fformatuser_005f0.setType("'profileLink'");
      // /includes/project/projectstable.jsp(53,24) name = id type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_jira_005fformatuser_005f0.setId("'project_' + ./key + '_table'");
      int _jspx_eval_jira_005fformatuser_005f0 = _jspx_th_jira_005fformatuser_005f0.doStartTag();
      if (_jspx_th_jira_005fformatuser_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fjira_005fformatuser_0026_005fuserKey_005ftype_005fid_005fnobody.reuse(_jspx_th_jira_005fformatuser_005f0);
      _jspx_th_jira_005fformatuser_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_jira_005fformatuser_005f0, _jsp_getInstanceManager(), _jspx_th_jira_005fformatuser_005f0_reused);
    }
    return false;
  }
}
