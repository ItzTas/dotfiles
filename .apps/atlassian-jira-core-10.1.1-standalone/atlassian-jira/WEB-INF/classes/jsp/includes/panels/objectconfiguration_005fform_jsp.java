/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat9
 * Generated at: 2024-10-09 09:01:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package jsp.includes.panels;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class objectconfiguration_005fform_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<ww:if test=\"objectConfiguration/enabled(.) == true\">\n    <div class=\"field-group\">\n    <fieldset class=\"group\">\n        <legend><ww:text name=\"objectConfiguration/fieldName(.)\"/></legend>\n    <ww:if test=\"objectConfiguration/fieldType(.)==0\">");
      out.write("\n        <ui:textfield label=\"&nbsp;\" name=\".\" value=\"paramValue(.)\" size=\"40\">\n            <ui:param name=\"'description'\"><ww:text name=\"objectConfiguration/fieldDescription(.)\" /></ui:param>\n        </ui:textfield>\n    </ww:if>\n    <ww:elseIf test=\"objectConfiguration/fieldType(.)==1\">");
      out.write("\n        <ui:textfield label=\"&nbsp;\" name=\".\" value=\"paramValue(.)\" size=\"40\">\n            <ui:param name=\"'description'\"><ww:text name=\"objectConfiguration/fieldDescription(.)\" /></ui:param>\n        </ui:textfield>\n    </ww:elseIf>\n    <ww:elseIf test=\"objectConfiguration/fieldType(.)==2 && objectConfiguration/fieldValues(.)/empty == false\">");
      out.write("\n        <ui:select label=\"&nbsp;\" name=\".\" value=\"paramValue(.)\" list=\"objectConfiguration/fieldValuesHtmlEncoded(.)\" listKey=\"'key'\" listValue=\"'value'\">\n            <ui:param name=\"'description'\"><ww:text name=\"objectConfiguration/fieldDescription(.)\" /></ui:param>\n            <ui:param name=\"'internat'\" value=\"objectConfiguration/i18NValues(.)\"/>\n        </ui:select>\n    </ww:elseIf>\n    <ww:elseIf test=\"objectConfiguration/fieldType(.)==2 && objectConfiguration/fieldValues(.)/empty == true\">\n        <ui:component label=\"&nbsp;\" template=\"textlabel.jsp\">\n        <ui:param name=\"'texthtml'\">\n            <ww:text name=\"'portlets.field.no.values'\">\n                <ww:param name=\"'value0'\"><ww:text name=\"objectConfiguration/fieldName(.)\"/></ww:param>\n            </ww:text>\n        </ui:param>\n        </ui:component>\n        ");
 request.setAttribute("jira.portletform.showsavebutton", Boolean.FALSE); 
      out.write("\n    </ww:elseIf>\n    <ww:elseIf test=\"objectConfiguration/fieldType(.)==3\">");
      out.write("\n        <ui:component name=\".\" value=\"objectConfiguration/fieldDefault(.)\" template=\"hidden.jsp\" />\n    </ww:elseIf>\n    <ww:elseIf test=\"objectConfiguration/fieldType(.)==4\">");
      out.write("\n        <ui:component name=\".\" label=\"&nbsp;\" value=\"paramValue(.)\" template=\"datepicker2.jsp\">\n            <ui:param name=\"'formname'\" value=\"'jiraform'\" />\n            <ui:param name=\"'description'\"><ww:text name=\"objectConfiguration/fieldDescription(.)\" /></ui:param>\n        </ui:component>\n    </ww:elseIf>\n    <ww:elseIf test=\"objectConfiguration/fieldType(.)==5\">");
      out.write("\n        <ui:component name=\".\" label=\"&nbsp;\" value=\"paramValue(.)\" template=\"userselect.jsp\">\n            <ui:param name=\"'formname'\" value=\"'jiraform'\" />\n            <ui:param name=\"'description'\"><ww:text name=\"objectConfiguration/fieldDescription(.)\" /></ui:param>\n        </ui:component>\n    </ww:elseIf>\n    <ww:elseIf test=\"objectConfiguration/fieldType(.)==7\">");
      out.write("\n        <ui:textarea label=\"&nbsp;\" name=\".\" value=\"paramValue(.)\" rows=\"10\" cols=\"40\">\n            <ui:param name=\"'description'\"><ww:text name=\"objectConfiguration/fieldDescription(.)\" /></ui:param>\n            <ui:param name=\"'style'\">width: 100%;</ui:param>\n        </ui:textarea>\n    </ww:elseIf>\n    <ww:elseIf test=\"objectConfiguration/fieldType(.)==8 && objectConfiguration/fieldValues(.)/empty == false\">");
      out.write("\n        <ui:select template=\"selectmultiple.jsp\" label=\"&nbsp;\" name=\".\" value=\"paramValues(.)\" list=\"objectConfiguration/fieldValuesHtmlEncoded(.)\" listKey=\"'key'\" listValue=\"'value'\">\n            <ui:param name=\"'description'\"><ww:text name=\"objectConfiguration/fieldDescription(.)\" /></ui:param>\n            <ui:param name=\"'internat'\" value=\"objectConfiguration/i18NValues(.)\"/>\n            <ww:if test=\"objectConfiguration/fieldValues(.)/size() <= 5\">\n                <ui:param name=\"'size'\" value=\"objectConfiguration/fieldValues(.)/size()\"/>\n            </ww:if>\n            <ww:else>\n                <ui:param name=\"'size'\" value=\"5\"/>\n            </ww:else>\n        </ui:select>\n    </ww:elseIf>\n    <ww:elseIf test=\"objectConfiguration/fieldType(.)==8 && objectConfiguration/fieldValues(.)/empty == true\">\n        <ui:component label=\"&nbsp;\" template=\"textlabel.jsp\">\n            <ui:param name=\"'texthtml'\">\n                <ww:text name=\"'portlets.field.no.values'\">\n                    <ww:param name=\"'value0'\"><ww:text name=\"objectConfiguration/fieldName(.)\"/></ww:param>\n");
      out.write("                </ww:text>\n            </ui:param>\n        </ui:component>\n        ");
 request.setAttribute("jira.portletform.showsavebutton", Boolean.FALSE); 
      out.write("\n    </ww:elseIf>\n    <ww:elseIf test=\"objectConfiguration/fieldType(.)==9\">");
      out.write("\n        <ui:component name=\".\" value=\"paramValue(.)\" label=\"&nbsp;\" template=\"checkbox.jsp\">\n            <ui:param name=\"'description'\"><ww:text name=\"objectConfiguration/fieldDescription(.)\" /></ui:param>\n            <ui:param name=\"'fieldValue'\">true</ui:param>\n        </ui:component>\n    </ww:elseIf>\n    <ww:elseIf test=\"objectConfiguration/fieldType(.)==10\">");
      out.write("\n        <ui:component label=\"&nbsp;\" name=\".\" template=\"cascadingselect.jsp\">\n            <ui:param name=\"'description'\"><ww:text name=\"objectConfiguration/fieldDescription(.)\" /></ui:param>\n            <ui:param name=\"'internat'\" value=\"objectConfiguration/i18NValues(.)\"/>\n            <ui:param name=\"'cascadeFrom'\" value=\"objectConfiguration/fieldValues(.)/cascadeFrom\"/>\n            <ui:param name=\"'list'\" value=\"objectConfiguration/fieldValuesHtmlEncoded(.)\"/>\n            <ui:param name=\"'listClass'\" value=\"'value/className'\"/>\n            <ui:param name=\"'listKey'\" value=\"'key'\"/>\n            <ui:param name=\"'listValue'\" value=\"'value/value'\"/>\n            <ui:param name=\"'value'\" value=\"paramValue(.)\"/>\n        </ui:component>\n    </ww:elseIf>\n    <ww:elseIf test=\"objectConfiguration/fieldType(.)==11\">");
      out.write("\n        <ui:component label=\"&nbsp;\" name=\".\" template=\"filterpicker.jsp\">\n            <ui:param name=\"'description'\"><ww:text name=\"objectConfiguration/fieldDescription(.)\" /></ui:param>\n            <ui:param name=\"'value'\" value=\"paramValue(.)\"/>\n            <ui:param name=\"'filtername'\" value=\"filterName(.)\"/>\n        </ui:component>\n    </ww:elseIf>\n    <ww:elseIf test=\"objectConfiguration/fieldType(.)==12\">");
      out.write("\n        <ui:component label=\"&nbsp;\" name=\".\" template=\"filterprojectpicker.jsp\">\n            <ui:param name=\"'description'\"><ww:text name=\"objectConfiguration/fieldDescription(.)\" /></ui:param>\n            <ui:param name=\"'value'\" value=\"paramValue(.)\"/>\n            <ui:param name=\"'filterprojectname'\" value=\"filterProjectName(.)\"/>\n        </ui:component>\n    </ww:elseIf>\n    </fieldset>\n    </div>\n</ww:if>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
